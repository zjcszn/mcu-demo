#ifndef _DRIVE_UART_H
#define _DRIVE_UART_H

#ifdef _UART_C
#define EXT_UART
#else
#define EXT_UART	extern
#endif	  

#define RxBufferSize   0x1

#define PORT_MAX	5				//串口最大数
//com 端口定义
#define COM1	0
#define COM2	1
#define COM3	2
#define COM4	3
#define COM5    4

#define OPEN	1
#define CLOSE	0

EXT_UART void UART_Configuration (void);    

/**********************************************************************************************
函数名：open_port()
功能：打开指定的串口
入口参数：串口号，波特率、启始位、数据位、停止位、校验
出口参数：返回是否打开，TRUE：OPEN FALSE：UNOPEN
***********************************************************************************************/
EXT_UART UINT8 open_port(UINT8 port,UINT32 baud,UINT8 startbit,UINT8 databit,UINT8 stopbit,UINT8 parity);

/**********************************************************************************************
函数名：	close_port()
功能：		关闭指定的串口
入口参数：	串口号
出口参数：	返回是否关闭成功.
***********************************************************************************************/
EXT_UART void CloseUart(UINT8 num);

/**********************************************************************************************
函数名：	UINT8 send_data(UINT8 port,UINT8 *pdata, UINT8 length)
功能：		API函数.应用层调用发送数据的函数.
入口参数：	串口号,发送数据区首址,发送数据长度
出口参数：	实际发送的字节数.
***********************************************************************************************/
EXT_UART UINT8 send_data(UINT8 port,UINT8 *pdata, UINT8 length);

/**********************************************************************************************
函数名：	UINT8 send_str(UINT8 port,UINT8 *pstr)
功能：		API函数.应用层调用发送字符串的函数.
入口参数：	串口号,字符串指针
出口参数：	实际发送的字节数.
***********************************************************************************************/
EXT_UART UINT8 send_str(UINT8 port,UINT8 *pstr);

/**********************************************************************************************
函数名：	UINT8 get_uart_state(UINT8 port)
功能：		API函数.应用层调用检查当前串口状态的函数.
入口参数：	串口号
出口参数：	串口当前状态，关闭或者是打开
***********************************************************************************************/
EXT_UART UINT8 get_uart_state(UINT8 port);	

/**********************************************************************************************
函数名：	UINT8 get_rec_len(UINT8 port)
功能：		API函数.应用层调用.得到底层接收缓冲区的可用字节数。
入口参数：	串口号
出口参数：	返回有多少个字节可用
***********************************************************************************************/
EXT_UART UINT8 get_rec_len(UINT8 port);

/**********************************************************************************************
函数名：	UINT8 procure_data(UINT8 * Desp,UINT8 port,UINT8 len)
功能：		API函数。应用层调用获得底层数据的函数。
入口参数：	目的缓冲区首址，端口号，接收长度
出口参数：	成功接收的字节数
************注意：一般情况下，此函数应和UINT8 get_rec_len(UINT8 port)函数配套使用。
***********************************************************************************************/
EXT_UART UINT8 procure_data(UINT8 * Desp,UINT8 port,UINT8 len);

EXT_UART UINT8 write_data(UINT8 port);
EXT_UART void read_data(UINT8 port);
#endif /* __UART_H */


