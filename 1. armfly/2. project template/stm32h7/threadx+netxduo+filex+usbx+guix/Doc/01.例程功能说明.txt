/*
*********************************************************************************************************
*	                                  
*	版    本 : V2.0
*	说    明 : ThreadX全家桶所有组件综合模板。
*              实验目的：
*                1. 本章主要学习ThreadX全家桶所有组件综合模板。            
*              实验内容：
*                1. 共创建了如下几个任务，通过按下按键K1可以通过串口打印任务堆栈使用情况
*                    ===============================================================
*                    OS CPU Usage =  1.31%
*                    ===============================================================
*                     任务优先级 任务栈大小 当前使用栈  最大栈使用   任务名
*                       Prio     StackSize   CurStack    MaxStack   Taskname
*                        2         4092        303         459      App Task Start
*                       30         1020        303         303      App Task STAT
*                       31         1020         87          71      App Task IDLE
*                        5         4092        311         551      App Msp Pro
*                        7         4092        303         719      App Task UserIF
*                        8         4092        183         575      App Task GUI
*                        6         4092        255         359      App NETX Pro
*                       16         4092        259         851      GUIX System Thread
*                        3         4092        415         535      NetX IP Instance 0
*                        4         1020        391         463      ux_slave_storage_thread
*                        0         1020        191         235      System Timer Thread         
*                    串口软件建议使用SecureCRT（V7光盘里面有此软件）查看打印信息。
*                    App Task Start任务  ：启动任务，这里用作BSP驱动包处理。
*                    App Task MspPro任务 ：消息处理，这里用作FileX文件系统处理。
*                    App Task UserIF任务 ：按键消息处理。
*                    App Task GUI任务    ：GUI应用任务。
*                    App Task STAT任务   ：统计任务
*                    App Task IDLE任务   ：空闲任务
*                    App NETX Pro任务    ：NetX网络应用处理任务
*                    GUIX System Thread  ：GUI系统任务
*                    System Timer Thread任务：系统定时器任务
*                    ux_slave_storage_thread任务：模拟U盘任务
*                    NetX IP Instance 0 任务：网络处理任务
*                2. (1) 凡是用到printf函数的全部通过函数App_Printf实现。
*                   (2) App_Printf函数做了信号量的互斥操作，解决资源共享问题。
*              操作说明：
*                1. 由于程序使用了DWT时钟周期计数器，程序下载后，请将板子重新上电使用，防止
*                   DWT时钟周期计数器没有正常复位。
*                2. SD卡的FileX文件系统和SD卡模拟U盘操作串口命令命令，仅需输入下面的字符即可：	
*                   请选择操作命令，打开SD卡模拟U盘操作期间不支持再调用命令1-6:
*                   1 - 显示根目录下的文件列表
*                   2 - 创建一个新文件armfly.txt
*                   3 - 读armfly.txt文件的内容
*                   4 - 创建目录
*                   5 - 删除文件和目录
*                   6 - 读写文件速度测试
*                   a - 打开SD卡模拟U盘
*                   b - 关闭SD卡模拟U盘
*               3. NetX网络协议栈操作：
*                  (1) 默认IP地址192.168.28.245，在demo_dm9162_netx.c开头定义，用户可根据需要修改。
*                  (2) 可以在电脑端用网络调试软件创建TCP Client连接此服务器端，端口号1001。
*                  (3) 实现了一个简单的回环通信，用户使用上位机发送的数据通过板子返回到上位机。
*              注意事项：
*                1. 本实验推荐使用串口软件SecureCRT，要不串口打印效果不整齐。此软件在
*                   V7开发板光盘里面有。
*                2. 务必将编辑器的缩进参数和TAB设置为4来阅读本文件，要不代码显示不整齐。
*
*	修改记录 :
*		版本号   日期         作者            说明
*       V1.0    2021-01-30   Eric2013    1. ST固件库1.9.0版本
*                                        2. BSP驱动包V1.2
*                                        3. ThreadX版本V6.0
*                                        4. GUIX版本V6.0
*                                        5. FileX版本V6.1.3
*                                        6. NetXDUO版本V6.1.3
*                                        7. USBX版本V6.1.3
*
*       V2.0    2023-12-20   Eric2013    1. ST固件库1.11.1版本
*                                        2. BSP驱动包V1.2
*                                        3. ThreadX全家桶6.3.0
*                                       
*	Copyright (C), 2021-2030, 安富莱电子 www.armbbs.cn
*
*********************************************************************************************************
*/